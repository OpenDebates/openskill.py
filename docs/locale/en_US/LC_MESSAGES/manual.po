msgid ""
msgstr ""
"Project-Id-Version: openskill\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-06 19:50+0530\n"
"PO-Revision-Date: 2023-07-09 23:47\n"
"Last-Translator: \n"
"Language-Team: English\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: openskill\n"
"X-Crowdin-Project-ID: 554293\n"
"X-Crowdin-Language: en\n"
"X-Crowdin-File: /docs/_build/gettext/manual.pot\n"
"X-Crowdin-File-ID: 85\n"
"Language: en_US\n"

#: ../../manual.rst:7
msgid "A faster and open license multi-team, multiplayer rating system comparable to TrueSkill."
msgstr "A faster and open license multi-team, multiplayer rating system comparable to TrueSkill."

#: ../../manual.rst:9
msgid "This is a port of the amazing `openskill.js`_ package and some of it's models are based on this wonderful `paper`_."
msgstr "This is a port of the amazing `openskill.js`_ package and some of it's models are based on this wonderful `paper`_."

#: ../../manual.rst:12
msgid "Usage"
msgstr "Usage"

#: ../../manual.rst:30
msgid "If ``a1`` and ``a2`` are on a team, and wins against a team of ``b1`` and ``b2``, send this into rate:"
msgstr "If ``a1`` and ``a2`` are on a team, and wins against a team of ``b1`` and ``b2``, send this into rate:"

#: ../../manual.rst:39
msgid "You can also create ``Rating`` objects by importing ``create_rating``:"
msgstr "You can also create ``Rating`` objects by importing ``create_rating``:"

#: ../../manual.rst:50
msgid "Ranks"
msgstr "Ranks"

#: ../../manual.rst:52
msgid "When displaying a rating, or sorting a list of ratings, you can use ``ordinal``:"
msgstr "When displaying a rating, or sorting a list of ratings, you can use ``ordinal``:"

#: ../../manual.rst:61
msgid "By default, this returns ``mu - 3 * sigma``, showing a rating for which there's a `99.7%`_ likelihood the player's true rating is higher, so with early games, a player's ordinal rating will usually go up and could go up even if that player loses."
msgstr "By default, this returns ``mu - 3 * sigma``, showing a rating for which there's a `99.7%`_ likelihood the player's true rating is higher, so with early games, a player's ordinal rating will usually go up and could go up even if that player loses."

#: ../../manual.rst:67
msgid "Artificial Ranks"
msgstr "Artificial Ranks"

#: ../../manual.rst:69
msgid "If your teams are listed in one order but your ranking is in a different order, for convenience you can specify a ranks option, such as:"
msgstr "If your teams are listed in one order but your ranking is in a different order, for convenience you can specify a ranks option, such as:"

#: ../../manual.rst:79
msgid "It's assumed that the lower ranks are better (wins), while higher ranks are worse (losses). You can provide a score instead, where lower is worse and higher is better. These can just be raw scores from the game, if you want."
msgstr "It's assumed that the lower ranks are better (wins), while higher ranks are worse (losses). You can provide a score instead, where lower is worse and higher is better. These can just be raw scores from the game, if you want."

#: ../../manual.rst:84
msgid "Ties should have either equivalent rank or score."
msgstr "Ties should have either equivalent rank or score."

#: ../../manual.rst:94
msgid "Predicting Winners"
msgstr "Predicting Winners"

#: ../../manual.rst:96
msgid "You can compare two or more teams to get the probabilities of each team winning."
msgstr "You can compare two or more teams to get the probabilities of each team winning."

#: ../../manual.rst:111
msgid "Predicting Draws"
msgstr "Predicting Draws"

#: ../../manual.rst:113
msgid "You can compare two or more teams to get the probabilities of the match drawing."
msgstr "You can compare two or more teams to get the probabilities of the match drawing."

#: ../../manual.rst:126
msgid "Predicting Ranks"
msgstr "Predicting Ranks"

#: ../../manual.rst:146
msgid "Choosing Models"
msgstr "Choosing Models"

#: ../../manual.rst:148
msgid "The default model is ``PlackettLuce``. You can import alternate models from ``openskill.models`` like so:"
msgstr "The default model is ``PlackettLuce``. You can import alternate models from ``openskill.models`` like so:"

#: ../../manual.rst:159
msgid "Available Models"
msgstr "Available Models"

#: ../../manual.rst:161
msgid "``BradleyTerryFull``: Full Pairing for Bradley-Terry"
msgstr "``BradleyTerryFull``: Full Pairing for Bradley-Terry"

#: ../../manual.rst:162
msgid "``BradleyTerryPart``: Partial Pairing for Bradely-Terry"
msgstr "``BradleyTerryPart``: Partial Pairing for Bradely-Terry"

#: ../../manual.rst:163
msgid "``PlackettLuce``: Generalized Bradley-Terry"
msgstr "``PlackettLuce``: Generalized Bradley-Terry"

#: ../../manual.rst:164
msgid "``ThurstoneMostellerFull``: Full Pairing for Thurstone-Mosteller"
msgstr "``ThurstoneMostellerFull``: Full Pairing for Thurstone-Mosteller"

#: ../../manual.rst:165
msgid "``ThurstoneMostellerPart``: Partial Pairing for Thurstone-Mosteller"
msgstr "``ThurstoneMostellerPart``: Partial Pairing for Thurstone-Mosteller"

#: ../../manual.rst:168
msgid "Which Model Do I Want?"
msgstr "Which Model Do I Want?"

#: ../../manual.rst:170
msgid "Bradley-Terry rating models follow a logistic distribution over a player's skill, similar to Glicko."
msgstr "Bradley-Terry rating models follow a logistic distribution over a player's skill, similar to Glicko."

#: ../../manual.rst:172
msgid "Thurstone-Mosteller rating models follow a gaussian distribution, similar to TrueSkill. Gaussian CDF/PDF functions differ in implementation from system to system (they're all just chebyshev approximations anyway). The accuracy of this model isn't usually as great either, but tuning this with an alternative gamma function can improve the accuracy if you really want to get into it."
msgstr "Thurstone-Mosteller rating models follow a gaussian distribution, similar to TrueSkill. Gaussian CDF/PDF functions differ in implementation from system to system (they're all just chebyshev approximations anyway). The accuracy of this model isn't usually as great either, but tuning this with an alternative gamma function can improve the accuracy if you really want to get into it."

#: ../../manual.rst:178
msgid "Full pairing should have more accurate ratings over partial pairing, however in high k games (like a 100+ person marathon race), Bradley-Terry and Thurstone-Mosteller models need to do a calculation of joint probability which involves is a k-1 dimensional integration, which is computationally expensive. Use partial pairing in this case, where players only change based on their neighbors."
msgstr "Full pairing should have more accurate ratings over partial pairing, however in high k games (like a 100+ person marathon race), Bradley-Terry and Thurstone-Mosteller models need to do a calculation of joint probability which involves is a k-1 dimensional integration, which is computationally expensive. Use partial pairing in this case, where players only change based on their neighbors."

#: ../../manual.rst:184
msgid "Plackett-Luce (**default**) is a generalized Bradley-Terry model for k ≥ 3 teams. It scales best."
msgstr "Plackett-Luce (**default**) is a generalized Bradley-Terry model for k ≥ 3 teams. It scales best."

#: ../../manual.rst:188
msgid "Implementations in other Languages"
msgstr "Implementations in other Languages"

#: ../../manual.rst:190
msgid "`Javascript`_"
msgstr "`Javascript`_"

#: ../../manual.rst:191
msgid "`Elixir`_"
msgstr "`Elixir`_"

#: ../../manual.rst:192
msgid "`Kotlin`_"
msgstr "`Kotlin`_"

#: ../../manual.rst:193
msgid "`Lua`_"
msgstr "`Lua`_"

